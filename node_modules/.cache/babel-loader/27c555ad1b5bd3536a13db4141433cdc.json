{"ast":null,"code":"var _jsxFileName = \"C:\\\\Ranjita\\\\dynamic-form-app\\\\src\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet template = {\n  form_heading: 'Form Heading',\n  form_description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi',\n  fields: [{\n    title: 'First Name',\n    type: 'text',\n    name: 'firstName',\n    id: 'firstName',\n    validation: 'true',\n    validationProps: {\n      required: 'First Name is mandatory'\n    }\n  }, {\n    title: 'Last Name',\n    type: 'text',\n    name: 'lastName',\n    id: 'lastName'\n  }, {\n    title: 'Email',\n    type: 'email',\n    name: 'email',\n    validation: 'true',\n    validationProps: {\n      required: 'Email is mandatory'\n    }\n  }]\n};\n\nconst renderFields = () => {\n  const {\n    fields\n  } = template;\n  console.log(fields);\n};\n\nconst Form = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    setError,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => {\n    alert(JSON.stringify(data));\n  };\n\n  const username = register(\"username\");\n  const lastName = register(\"lastName\");\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"username\",\n      type: \"text\",\n      onChange: e => {\n        username.onChange(e);\n        setError(\"username\", {\n          type: \"manual\",\n          message: \"Error message\"\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this), errors.username && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errors.username.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"First Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"firstName\", {\n        required: true\n      }),\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }, this), errors.firstName && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errors.firstName.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Last Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => {\n        lastName.onChange(e);\n        setError(\"lastName\", {\n          types: {\n            required: \"This is required\",\n            minLength: \"This is minLength\"\n          }\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }, this), errors.lastName && errors.lastName.types && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errors.lastName.types.required\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), errors.lastName && errors.lastName.types && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errors.lastName.types.minLength\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        [{\n          type: \"manual\",\n          name: \"username\",\n          message: \"Double Check This\"\n        }, {\n          type: \"manual\",\n          name: \"firstName\",\n          message: \"Triple Check This\"\n        }].forEach(_ref => {\n          let {\n            name,\n            type,\n            message\n          } = _ref;\n          return setError(name, {\n            type,\n            message\n          });\n        });\n      },\n      children: \"Trigger Name Errors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"K+nhvZZxUv+NXdA/XChhM1azjTU=\", false, function () {\n  return [useForm];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useForm","template","form_heading","form_description","fields","title","type","name","id","validation","validationProps","required","renderFields","console","log","Form","register","handleSubmit","setError","formState","errors","onSubmit","data","alert","JSON","stringify","username","lastName","e","onChange","message","firstName","types","minLength","forEach"],"sources":["C:/Ranjita/dynamic-form-app/src/Form.js"],"sourcesContent":["import React from \"react\";\r\nimport { useForm } from 'react-hook-form';\r\n\r\nlet template = {\r\n    form_heading: 'Form Heading',\r\n    form_description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi',\r\n    fields: [\r\n        {\r\n            title: 'First Name',\r\n            type: 'text',\r\n            name: 'firstName',\r\n            id: 'firstName',\r\n            validation:'true',\r\n            validationProps: {\r\n                required: 'First Name is mandatory'\r\n            }\r\n        },\r\n        {\r\n            title: 'Last Name',\r\n            type: 'text',\r\n            name: 'lastName',\r\n            id: 'lastName',\r\n        },\r\n        {\r\n            title: 'Email',\r\n            type: 'email',\r\n            name: 'email',\r\n            validation:'true',\r\n            validationProps: {\r\n                required: 'Email is mandatory'\r\n            },\r\n        },       \r\n        \r\n    ]\r\n}\r\nconst renderFields = () => {\r\n    const {fields} = template;\r\n    console.log(fields);\r\n}\r\nconst Form = () => {\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        setError,\r\n        formState: { errors }\r\n      } = useForm();\r\n    \r\n      const onSubmit = (data) => {\r\n        alert(JSON.stringify(data));\r\n      };\r\n    \r\n      const username = register(\"username\");\r\n      const lastName = register(\"lastName\");\r\n    \r\n      return (\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <label>Username</label>\r\n          <input\r\n            name=\"username\"\r\n            type=\"text\"\r\n            onChange={(e) => {\r\n              username.onChange(e);\r\n              setError(\"username\", {\r\n                type: \"manual\",\r\n                message: \"Error message\"\r\n              });\r\n            }}\r\n          />\r\n          {errors.username && <p>{errors.username.message}</p>}\r\n          <label>First Name</label>\r\n          <input {...register(\"firstName\", { required: true })} type=\"text\" />\r\n          {errors.firstName && <p>{errors.firstName.message}</p>}\r\n          <label>Last Name</label>\r\n          <input\r\n            type=\"text\"\r\n            onChange={(e) => {\r\n              lastName.onChange(e);\r\n              setError(\"lastName\", {\r\n                types: {\r\n                  required: \"This is required\",\r\n                  minLength: \"This is minLength\"\r\n                }\r\n              });\r\n            }}\r\n          />\r\n          {errors.lastName && errors.lastName.types && (\r\n            <p>{errors.lastName.types.required}</p>\r\n          )}\r\n          {errors.lastName && errors.lastName.types && (\r\n            <p>{errors.lastName.types.minLength}</p>\r\n          )}\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              [\r\n                {\r\n                  type: \"manual\",\r\n                  name: \"username\",\r\n                  message: \"Double Check This\"\r\n                },\r\n                {\r\n                  type: \"manual\",\r\n                  name: \"firstName\",\r\n                  message: \"Triple Check This\"\r\n                }\r\n              ].forEach(({ name, type, message }) =>\r\n                setError(name, { type, message })\r\n              );\r\n            }}\r\n          >\r\n            Trigger Name Errors\r\n          </button>\r\n          <input type=\"submit\" />\r\n        </form>\r\n      );\r\n}\r\n\r\nexport default Form;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,IAAIC,QAAQ,GAAG;EACXC,YAAY,EAAE,cADH;EAEXC,gBAAgB,EAAE,qMAFP;EAGXC,MAAM,EAAE,CACJ;IACIC,KAAK,EAAE,YADX;IAEIC,IAAI,EAAE,MAFV;IAGIC,IAAI,EAAE,WAHV;IAIIC,EAAE,EAAE,WAJR;IAKIC,UAAU,EAAC,MALf;IAMIC,eAAe,EAAE;MACbC,QAAQ,EAAE;IADG;EANrB,CADI,EAWJ;IACIN,KAAK,EAAE,WADX;IAEIC,IAAI,EAAE,MAFV;IAGIC,IAAI,EAAE,UAHV;IAIIC,EAAE,EAAE;EAJR,CAXI,EAiBJ;IACIH,KAAK,EAAE,OADX;IAEIC,IAAI,EAAE,OAFV;IAGIC,IAAI,EAAE,OAHV;IAIIE,UAAU,EAAC,MAJf;IAKIC,eAAe,EAAE;MACbC,QAAQ,EAAE;IADG;EALrB,CAjBI;AAHG,CAAf;;AAgCA,MAAMC,YAAY,GAAG,MAAM;EACvB,MAAM;IAACR;EAAD,IAAWH,QAAjB;EACAY,OAAO,CAACC,GAAR,CAAYV,MAAZ;AACH,CAHD;;AAIA,MAAMW,IAAI,GAAG,MAAM;EAAA;;EACf,MAAM;IACFC,QADE;IAEFC,YAFE;IAGFC,QAHE;IAIFC,SAAS,EAAE;MAAEC;IAAF;EAJT,IAKApB,OAAO,EALb;;EAOE,MAAMqB,QAAQ,GAAIC,IAAD,IAAU;IACzBC,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAD,CAAL;EACD,CAFD;;EAIA,MAAMI,QAAQ,GAAGV,QAAQ,CAAC,UAAD,CAAzB;EACA,MAAMW,QAAQ,GAAGX,QAAQ,CAAC,UAAD,CAAzB;EAEA,oBACE;IAAM,QAAQ,EAAEC,YAAY,CAACI,QAAD,CAA5B;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MACE,IAAI,EAAC,UADP;MAEE,IAAI,EAAC,MAFP;MAGE,QAAQ,EAAGO,CAAD,IAAO;QACfF,QAAQ,CAACG,QAAT,CAAkBD,CAAlB;QACAV,QAAQ,CAAC,UAAD,EAAa;UACnBZ,IAAI,EAAE,QADa;UAEnBwB,OAAO,EAAE;QAFU,CAAb,CAAR;MAID;IATH;MAAA;MAAA;MAAA;IAAA,QAFF,EAaGV,MAAM,CAACM,QAAP,iBAAmB;MAAA,UAAIN,MAAM,CAACM,QAAP,CAAgBI;IAApB;MAAA;MAAA;MAAA;IAAA,QAbtB,eAcE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAdF,eAeE,sBAAWd,QAAQ,CAAC,WAAD,EAAc;QAAEL,QAAQ,EAAE;MAAZ,CAAd,CAAnB;MAAsD,IAAI,EAAC;IAA3D;MAAA;MAAA;MAAA;IAAA,QAfF,EAgBGS,MAAM,CAACW,SAAP,iBAAoB;MAAA,UAAIX,MAAM,CAACW,SAAP,CAAiBD;IAArB;MAAA;MAAA;MAAA;IAAA,QAhBvB,eAiBE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAjBF,eAkBE;MACE,IAAI,EAAC,MADP;MAEE,QAAQ,EAAGF,CAAD,IAAO;QACfD,QAAQ,CAACE,QAAT,CAAkBD,CAAlB;QACAV,QAAQ,CAAC,UAAD,EAAa;UACnBc,KAAK,EAAE;YACLrB,QAAQ,EAAE,kBADL;YAELsB,SAAS,EAAE;UAFN;QADY,CAAb,CAAR;MAMD;IAVH;MAAA;MAAA;MAAA;IAAA,QAlBF,EA8BGb,MAAM,CAACO,QAAP,IAAmBP,MAAM,CAACO,QAAP,CAAgBK,KAAnC,iBACC;MAAA,UAAIZ,MAAM,CAACO,QAAP,CAAgBK,KAAhB,CAAsBrB;IAA1B;MAAA;MAAA;MAAA;IAAA,QA/BJ,EAiCGS,MAAM,CAACO,QAAP,IAAmBP,MAAM,CAACO,QAAP,CAAgBK,KAAnC,iBACC;MAAA,UAAIZ,MAAM,CAACO,QAAP,CAAgBK,KAAhB,CAAsBC;IAA1B;MAAA;MAAA;MAAA;IAAA,QAlCJ,eAoCE;MACE,IAAI,EAAC,QADP;MAEE,OAAO,EAAE,MAAM;QACb,CACE;UACE3B,IAAI,EAAE,QADR;UAEEC,IAAI,EAAE,UAFR;UAGEuB,OAAO,EAAE;QAHX,CADF,EAME;UACExB,IAAI,EAAE,QADR;UAEEC,IAAI,EAAE,WAFR;UAGEuB,OAAO,EAAE;QAHX,CANF,EAWEI,OAXF,CAWU;UAAA,IAAC;YAAE3B,IAAF;YAAQD,IAAR;YAAcwB;UAAd,CAAD;UAAA,OACRZ,QAAQ,CAACX,IAAD,EAAO;YAAED,IAAF;YAAQwB;UAAR,CAAP,CADA;QAAA,CAXV;MAcD,CAjBH;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QApCF,eAyDE;MAAO,IAAI,EAAC;IAAZ;MAAA;MAAA;MAAA;IAAA,QAzDF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA6DL,CA5ED;;GAAMf,I;UAMIf,O;;;KANJe,I;AA8EN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}