{"ast":null,"code":"var _jsxFileName = \"C:\\\\Ranjita\\\\dynamic-form-app\\\\src\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet template = {\n  form_heading: 'Form Heading',\n  form_description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi',\n  fields: [{\n    title: 'First Name',\n    type: 'text',\n    name: 'firstName',\n    id: 'firstName',\n    validation: 'true',\n    validationMessage: {\n      required: 'First Name is mandatory'\n    }\n  }, {\n    title: 'Last Name',\n    type: 'text',\n    name: 'lastName',\n    id: 'lastName',\n    validation: 'true',\n    validationMessage: {\n      required: 'First Name is mandatory'\n    }\n  }, {\n    title: 'Email',\n    type: 'email',\n    name: 'email',\n    validation: 'true',\n    validationMessage: {\n      required: 'Email is mandatory'\n    }\n  }, {\n    title: 'Password',\n    type: 'password',\n    name: 'password',\n    validation: 'true',\n    validationMessage: {\n      required: 'Email is mandatory'\n    }\n  }]\n};\n\nconst renderFields = () => {\n  const {\n    fields\n  } = template;\n  console.log(fields);\n};\n\nconst Form = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    setError,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      totExp: [],\n      remember: \"\"\n    }\n  });\n\n  const onSubmit = data => {\n    if (errors['firstName']) {\n      setError(\"firstName\", {\n        type: \"custom\"\n      });\n    }\n\n    if (errors['lastName']) {\n      setError(\"lastName\", {\n        type: \"custom\"\n      });\n    }\n\n    if (errors['email']) {\n      setError(\"email\", {\n        type: \"custom\"\n      });\n    }\n\n    if (errors['password']) {\n      setError(\"password\", {\n        type: \"custom\"\n      });\n    }\n\n    if (errors['totExp']) {\n      setError(\"totExp\", {\n        type: \"custom\"\n      });\n    }\n\n    if (errors['acceptTc']) {\n      setError(\"acceptTc\", {\n        type: \"custom\"\n      });\n    }\n\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: template.form_heading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: template.form_description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"post\",\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"firstName\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"firstName\",\n          name: \"firstName\",\n          ...register(\"firstName\", {\n            required: 'Enter First Name'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this), errors.firstName && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: errors['firstName']['message']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lastName\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"lastName\",\n          name: \"lastName\",\n          ...register(\"lastName\", {\n            required: 'Please Enter Last Name'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this), errors.lastName && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: errors.lastName.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: \"form-control\",\n          id: \"email\",\n          name: \"email\",\n          ...register(\"email\", {\n            required: \"Enter Email\",\n            pattern: {\n              value: /\\S+@\\S+\\.\\S+/,\n              message: \"Entered value does not match email format\"\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: errors.email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          id: \"password\",\n          name: \"password\",\n          ...register(\"password\", {\n            required: \"Enter Password\",\n            minLength: {\n              value: 5,\n              message: \"min length is 5\"\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: errors.password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-select form-select-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"totExp\",\n          className: \"form-label\",\n          children: \"Total Experience:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          id: \"totExp\",\n          name: \"totExp\",\n          ...register(\"totExp\", {\n            required: 'Please select total experience'\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this), errors.totExp && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: errors.totExp.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"acceptTc\",\n            name: \"acceptTc\",\n            ...register(\"acceptTc\", {\n              required: 'Please Accept'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 24\n          }, this), \"Accept Terms & Conditions\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.acceptTc && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: errors.acceptTc.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-default\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Form, \"GIBw6K/SMUjyv8wSTomsNYXcLU8=\", false, function () {\n  return [useForm];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useForm","template","form_heading","form_description","fields","title","type","name","id","validation","validationMessage","required","renderFields","console","log","Form","register","handleSubmit","setError","formState","errors","defaultValues","firstName","lastName","email","password","totExp","remember","onSubmit","data","message","pattern","value","minLength","acceptTc"],"sources":["C:/Ranjita/dynamic-form-app/src/Form.js"],"sourcesContent":["import React from \"react\";\r\nimport { useForm } from 'react-hook-form';\r\n\r\nlet template = {\r\n    form_heading: 'Form Heading',\r\n    form_description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi',\r\n    fields: [\r\n        {\r\n            title: 'First Name',\r\n            type: 'text',\r\n            name: 'firstName',\r\n            id: 'firstName',\r\n            validation:'true',\r\n            validationMessage: {\r\n                required: 'First Name is mandatory'\r\n            }\r\n        },\r\n        {\r\n            title: 'Last Name',\r\n            type: 'text',\r\n            name: 'lastName',\r\n            id: 'lastName',\r\n            validation:'true',\r\n            validationMessage: {\r\n                required: 'First Name is mandatory'\r\n            }\r\n        },\r\n        {\r\n            title: 'Email',\r\n            type: 'email',\r\n            name: 'email',\r\n            validation:'true',\r\n            validationMessage: {\r\n                required: 'Email is mandatory'\r\n            },\r\n        },\r\n        {\r\n            title: 'Password',\r\n            type: 'password',\r\n            name: 'password',\r\n            validation:'true',\r\n            validationMessage: {\r\n                required: 'Email is mandatory'\r\n            },\r\n        },   \r\n        \r\n    ]\r\n}\r\nconst renderFields = () => {\r\n    const {fields} = template;\r\n    console.log(fields);\r\n}\r\nconst Form = () => {\r\n    const { register, handleSubmit, setError, formState: { errors } } = useForm({\r\n        defaultValues: {\r\n          firstName: \"\",\r\n          lastName: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          totExp: [],\r\n          remember: \"\"\r\n        },\r\n      });\r\n    const onSubmit = (data) => {\r\n        if(errors['firstName']) {\r\n            setError(\"firstName\",{\r\n                type:\"custom\"\r\n            })\r\n        }\r\n        if(errors['lastName']) {\r\n            setError(\"lastName\",{\r\n                type:\"custom\",\r\n            })\r\n        }\r\n        if(errors['email']) {\r\n            setError(\"email\",{\r\n                type:\"custom\",\r\n            })\r\n        }\r\n        if(errors['password']) {\r\n            setError(\"password\",{\r\n                type:\"custom\",\r\n            })\r\n        }\r\n        if(errors['totExp']) {\r\n            setError(\"totExp\",{\r\n                type:\"custom\",\r\n            })\r\n        }\r\n        if(errors['acceptTc']) {\r\n            setError(\"acceptTc\",{\r\n                type:\"custom\",\r\n            })\r\n        }\r\n        \r\n        console.log(data)\r\n        \r\n    };\r\n    return(\r\n        <>\r\n        <h2>{template.form_heading}</h2>\r\n        <p>{template.form_description}</p>\r\n        <form method=\"post\" onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"firstName\">First Name</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"firstName\" name=\"firstName\" {...register(\"firstName\", {\r\n                    required: 'Enter First Name'\r\n                })}/>\r\n            {errors.firstName && <span>{errors['firstName']['message']}</span>}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"lastName\">Last Name</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"lastName\" name=\"lastName\" {...register(\"lastName\", {\r\n                    required: 'Please Enter Last Name',\r\n                })}/>  \r\n                {errors.lastName && <span>{errors.lastName.message}</span>}              \r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"email\">Email:</label>\r\n                <input type=\"email\" className=\"form-control\" id=\"email\" name=\"email\" {...register(\"email\", {\r\n          required: \"Enter Email\",\r\n          pattern: {\r\n            value: /\\S+@\\S+\\.\\S+/,\r\n            message: \"Entered value does not match email format\"\r\n          }\r\n        })}/>\r\n            {errors.email && <span>{errors.email.message}</span>}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Password:</label>\r\n                <input type=\"password\" className=\"form-control\" id=\"password\" name=\"password\" {...register(\"password\", {\r\n          required: \"Enter Password\",\r\n          minLength: {\r\n            value: 5,\r\n            message: \"min length is 5\"\r\n          }\r\n        })}/>\r\n        {errors.password && <span>{errors.password.message}</span>}\r\n            </div>\r\n            <div className=\"form-select form-select-lg\">\r\n                <label htmlFor=\"totExp\" className=\"form-label\">Total Experience:</label>\r\n                <select className=\"form-control\" id=\"totExp\" name=\"totExp\" {...register(\"totExp\", {\r\n                    required: 'Please select total experience',\r\n                })}>\r\n                <option>1</option>\r\n                <option>2</option>\r\n                <option>3</option>\r\n                <option>4</option>\r\n                <option>5</option>\r\n                </select>\r\n                {errors.totExp && <span>{errors.totExp.message}</span>}\r\n            </div>\r\n            <div className=\"checkbox\">\r\n                <label><input type=\"checkbox\" id=\"acceptTc\" name=\"acceptTc\" {...register(\"acceptTc\", {\r\n                    required: 'Please Accept',\r\n                })}/>Accept Terms & Conditions</label>\r\n                <p>{errors.acceptTc && <span>{errors.acceptTc.message}</span>}</p>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-default\">Submit</button>   \r\n        </form>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Form;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}